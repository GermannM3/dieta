#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.init_database import async_session_maker
from sqlalchemy import text

async def setup_premium_functions():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π...")
    
    async with async_session_maker() as session:
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            await session.execute(text("""
                CREATE TABLE IF NOT EXISTS premium_functions (
                    id SERIAL PRIMARY KEY,
                    name VARCHAR(100) NOT NULL,
                    description TEXT,
                    price INTEGER NOT NULL,
                    duration_days INTEGER NOT NULL,
                    is_active BOOLEAN DEFAULT TRUE,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                )
            """))
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
            functions = [
                {
                    "name": "personal_dietitian",
                    "description": "–õ–∏—á–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥ - –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è",
                    "price": 200,
                    "duration_days": 7
                },
                {
                    "name": "menu_generation", 
                    "description": "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é",
                    "price": 200,
                    "duration_days": 7
                },
                {
                    "name": "photo_recognition",
                    "description": "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –µ–¥—ã –ø–æ —Ñ–æ—Ç–æ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)",
                    "price": 0,
                    "duration_days": 0
                }
            ]
            
            for func in functions:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
                result = await session.execute(
                    text("SELECT id FROM premium_functions WHERE name = :name"),
                    {"name": func["name"]}
                )
                
                if not result.fetchone():
                    await session.execute(text("""
                        INSERT INTO premium_functions (name, description, price, duration_days)
                        VALUES (:name, :description, :price, :duration_days)
                    """), func)
                    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è: {func['name']} - {func['price']}‚ÇΩ")
                else:
                    print(f"‚ÑπÔ∏è  –§—É–Ω–∫—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {func['name']}")
            
            await session.commit()
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            await session.rollback()

if __name__ == "__main__":
    asyncio.run(setup_premium_functions()) 