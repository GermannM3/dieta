#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–æ–¥–ø–∏—Å–æ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import os
from sqlalchemy import text
from database.init_database import async_session_maker, engine

async def add_subscription_table():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ–¥–ø–∏—Å–æ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        async with engine.begin() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–¥–ø–∏—Å–æ–∫
            result = await conn.execute(text("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_name = 'subscriptions'
                );
            """))
            table_exists = result.scalar()
            
            if not table_exists:
                print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã subscriptions...")
                
                # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–¥–ø–∏—Å–æ–∫
                await conn.execute(text("""
                    CREATE TABLE subscriptions (
                        id SERIAL PRIMARY KEY,
                        user_id BIGINT NOT NULL REFERENCES users(tg_id),
                        subscription_type VARCHAR NOT NULL,
                        payment_id VARCHAR NOT NULL,
                        amount FLOAT NOT NULL,
                        currency VARCHAR DEFAULT 'RUB',
                        status VARCHAR DEFAULT 'pending',
                        start_date TIMESTAMP NOT NULL,
                        end_date TIMESTAMP NOT NULL,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    );
                """))
                
                # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                await conn.execute(text("""
                    CREATE INDEX idx_subscriptions_user_id ON subscriptions(user_id);
                    CREATE INDEX idx_subscriptions_type ON subscriptions(subscription_type);
                    CREATE INDEX idx_subscriptions_status ON subscriptions(status);
                    CREATE INDEX idx_subscriptions_end_date ON subscriptions(end_date);
                """))
                
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ subscriptions —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            else:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ subscriptions —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã subscriptions: {e}")
        raise

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–¥–ø–∏—Å–æ–∫...")
    await add_subscription_table()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")

if __name__ == "__main__":
    asyncio.run(main()) 