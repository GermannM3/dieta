#!/bin/bash

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ API..."
docker logs dieta-api-1 2>&1 | tail -20

echo "2Ô∏è‚É£ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker stop dieta-api-1 2>/dev/null
docker rm dieta-api-1 2>/dev/null

echo "3Ô∏è‚É£ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker-compose -f docker-compose.minimal.yml build api

echo "4Ô∏è‚É£ –ó–∞–ø—É—Å–∫ API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker-compose -f docker-compose.minimal.yml up -d api

echo "5Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API..."
sleep 15

echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API..."
docker ps | grep api

echo "7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞..."
docker logs dieta-api-1 2>&1 | tail -10

echo "8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
curl -I http://5.129.198.80/api/docs 2>/dev/null | head -1

echo "9Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞..."
API_CONTAINER=$(docker ps --format "{{.Names}}" | grep api | head -1)
if [ -n "$API_CONTAINER" ]; then
    echo "‚úÖ –ù–∞–π–¥–µ–Ω API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $API_CONTAINER"
    docker exec "$API_CONTAINER" python3 -c "
import asyncio
import bcrypt
from database.init_database import async_session_maker
from sqlalchemy import text

async def fix_admin():
    password = 'Germ@nnM3'
    salt = bcrypt.gensalt()
    hashed_password = bcrypt.hashpw(password.encode('utf-8'), salt)
    
    async with async_session_maker() as session:
        try:
            result = await session.execute(
                text('SELECT id, email, is_admin FROM users WHERE email = :email'),
                {'email': 'germannm@vk.com'}
            )
            user = result.fetchone()
            
            if user:
                await session.execute(
                    text('UPDATE users SET password_hash = :password_hash, is_admin = true, is_verified = true WHERE email = :email'),
                    {'password_hash': hashed_password.decode('utf-8'), 'email': 'germannm@vk.com'}
                )
                print('‚úÖ –ê–¥–º–∏–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω')
            else:
                await session.execute(
                    text('INSERT INTO users (email, password_hash, is_admin, is_verified, created_at) VALUES (:email, :password_hash, true, true, NOW())'),
                    {'email': 'germannm@vk.com', 'password_hash': hashed_password.decode('utf-8')}
                )
                print('‚úÖ –ù–æ–≤—ã–π –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω')
            
            await session.commit()
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
            await session.rollback()

asyncio.run(fix_admin())
"
else
    echo "‚ùå API –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!"
fi

echo "‚úÖ API –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!" 