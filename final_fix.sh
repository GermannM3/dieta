#!/bin/bash

echo "üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú..."

echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker ps

echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker exec dieta-api-1 python3 -c "
import asyncio
import aiohttp
import json

async def test_api():
    print('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...')
    
    async with aiohttp.ClientSession() as session:
        try:
            # –¢–µ—Å—Ç /docs
            async with session.get('http://localhost:8000/docs') as resp:
                print(f'‚úÖ /docs: {resp.status}')
            
            # –¢–µ—Å—Ç /api/search_food
            data = {'query': '—è–±–ª–æ–∫–æ'}
            async with session.post('http://localhost:8000/api/search_food', json=data) as resp:
                print(f'‚úÖ /api/search_food: {resp.status}')
                if resp.status == 200:
                    result = await resp.json()
                    print(f'   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(result.get(\"foods\", []))} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ')
            
            # –¢–µ—Å—Ç /api/auth/login
            data = {'email': 'germannm@vk.com', 'password': 'Germ@nnM3'}
            async with session.post('http://localhost:8000/api/auth/login', json=data) as resp:
                print(f'‚úÖ /api/auth/login: {resp.status}')
                if resp.status == 200:
                    result = await resp.json()
                    print(f'   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get(\"message\", \"OK\")}')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}')

asyncio.run(test_api())
"

echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend..."
docker exec dieta-frontend-1 curl -I http://localhost:3000 2>/dev/null | head -1

echo "4Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ nginx –∫–æ–Ω—Ñ–∏–≥–∞..."
cat > nginx-final.conf << 'EOF'
server {
    listen 80;
    server_name tvoi-kalkulyator.ru www.tvoi-kalkulyator.ru 5.129.198.80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name tvoi-kalkulyator.ru www.tvoi-kalkulyator.ru;

    ssl_certificate /etc/letsencrypt/live/tvoi-kalkulyator.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tvoi-kalkulyator.ru/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏
    location /api/ {
        proxy_pass http://api:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Frontend
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}

# HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è IP (fallback)
server {
    listen 80;
    server_name 5.129.198.80;

    # API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    location /api/ {
        proxy_pass http://api:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Frontend
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}
EOF

echo "5Ô∏è‚É£ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥–∞..."
docker cp nginx-final.conf dieta-nginx-1:/etc/nginx/conf.d/default.conf
docker-compose -f docker-compose.minimal.yml restart nginx

echo "6Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ nginx..."
sleep 15

echo "7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx –∫–æ–Ω—Ñ–∏–≥–∞..."
docker exec dieta-nginx-1 nginx -t

echo "8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–µ–π..."
echo "üîç –¢–µ—Å—Ç HTTP API –ø–æ IP..."
curl -X POST http://5.129.198.80/api/search_food \
  -H "Content-Type: application/json" \
  -d '{"query": "—è–±–ª–æ–∫–æ"}' \
  2>/dev/null | head -1

echo "üîç –¢–µ—Å—Ç HTTP Frontend –ø–æ IP..."
curl -I http://5.129.198.80/ 2>/dev/null | head -1

echo "üîç –¢–µ—Å—Ç HTTPS API –ø–æ –¥–æ–º–µ–Ω—É..."
curl -X POST https://tvoi-kalkulyator.ru/api/search_food \
  -H "Content-Type: application/json" \
  -d '{"query": "—è–±–ª–æ–∫–æ"}' \
  -k 2>/dev/null | head -1

echo "üîç –¢–µ—Å—Ç HTTPS Frontend –ø–æ –¥–æ–º–µ–Ω—É..."
curl -I https://tvoi-kalkulyator.ru/ -k 2>/dev/null | head -1

echo "9Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞..."
docker exec dieta-api-1 python3 -c "
import asyncio
import bcrypt
from database.init_database import async_session_maker
from sqlalchemy import text

async def fix_admin():
    print('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ germannm@vk.com...')
    
    password = 'Germ@nnM3'
    salt = bcrypt.gensalt()
    hashed_password = bcrypt.hashpw(password.encode('utf-8'), salt)
    
    async with async_session_maker() as session:
        try:
            result = await session.execute(
                text('SELECT id, email, is_admin FROM users WHERE email = :email'),
                {'email': 'germannm@vk.com'}
            )
            user = result.fetchone()
            
            if user:
                print(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.email}')
                
                await session.execute(
                    text('UPDATE users SET password_hash = :password_hash, is_admin = true, is_verified = true WHERE email = :email'),
                    {'password_hash': hashed_password.decode('utf-8'), 'email': 'germannm@vk.com'}
                )
                print('‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–¥–µ–ª–∞–Ω –∞–¥–º–∏–Ω–æ–º')
            else:
                print('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ...')
                
                await session.execute(
                    text('INSERT INTO users (email, password_hash, is_admin, is_verified, created_at) VALUES (:email, :password_hash, true, true, NOW())'),
                    {'email': 'germannm@vk.com', 'password_hash': hashed_password.decode('utf-8')}
                )
                print('‚úÖ –ù–æ–≤—ã–π –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω')
            
            await session.commit()
            print('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ')
            
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
            await session.rollback()

asyncio.run(fix_admin())
"

echo "üîü –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
docker ps

echo "‚úÖ –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üåê –°–∞–π—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã:"
echo "   HTTP:  http://5.129.198.80"
echo "   HTTPS: https://tvoi-kalkulyator.ru"
echo ""
echo "üîß API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:"
echo "   http://5.129.198.80/api/search_food"
echo "   http://5.129.198.80/api/auth/login"
echo ""
echo "üë§ –ê–¥–º–∏–Ω: germannm@vk.com / Germ@nnM3" 