#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏

echo "üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì DOCKER –î–ò–°–ö–û–í–û–ì–û –ü–†–û–°–¢–†–ê–ù–°–¢–í–ê"
echo "==========================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ sudo
if [ "$EUID" -ne 0 ]; then 
    echo "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo:"
    echo "   sudo bash monitor_docker_disk.sh"
    exit 1
fi

# –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Å–∫–µ
echo "üíæ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –î–ò–°–ö–ê:"
df -h / | tail -n 1
echo ""

# Docker —Å–∏—Å—Ç–µ–º–∞ –≤ —Ü–µ–ª–æ–º
echo "üê≥ DOCKER –°–ò–°–¢–ï–ú–ê:"
docker system df
echo ""

# –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ –†–ê–ó–ú–ï–† –ö–û–ù–¢–ï–ô–ù–ï–†–û–í:"
docker ps -a --size --format "table {{.Names}}\t{{.Status}}\t{{.Size}}" | head -n 10
echo ""

# –†–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "üìù –†–ê–ó–ú–ï–† –õ–û–ì–û–í –ö–û–ù–¢–ï–ô–ù–ï–†–û–í:"
for container in /var/lib/docker/containers/*/; do
    container_id=$(basename "$container")
    container_name=$(docker ps -a --filter "id=${container_id:0:12}" --format "{{.Names}}" 2>/dev/null)
    
    if [ -n "$container_name" ]; then
        log_file="$container/${container_id}-json.log"
        if [ -f "$log_file" ]; then
            size=$(du -h "$log_file" | cut -f1)
            status=$(docker ps -a --filter "id=${container_id:0:12}" --format "{{.Status}}")
            echo "  üìÑ $container_name: $size (${status:0:30})"
        fi
    fi
done
echo ""

# –¢–æ–ø 10 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üñºÔ∏è  –¢–û–ü-10 –ë–û–õ–¨–®–ò–• –û–ë–†–ê–ó–û–í:"
docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | head -n 11
echo ""

# –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ
echo "üóëÔ∏è  –ù–ï–ò–°–ü–û–õ–¨–ó–£–ï–ú–´–ï –î–ê–ù–ù–´–ï (–º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å):"
docker system df -v | grep -A 10 "Reclaimable"
echo ""

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
DISK_USAGE=$(df / | tail -n 1 | awk '{print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -gt 80 ]; then
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ > 80%!"
    echo ""
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
    echo "1. –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏: sudo bash cleanup_docker_logs.sh"
    echo "2. –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ: docker system prune -a"
    echo "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: docker logs <container_name>"
    echo ""
elif [ "$DISK_USAGE" -gt 90 ]; then
    echo "üö® –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ > 90%!"
    echo ""
    echo "–°–†–û–ß–ù–û –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "1. sudo bash cleanup_docker_logs.sh"
    echo "2. docker system prune -a --volumes"
    echo ""
else
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ –≤ –Ω–æ—Ä–º–µ ($DISK_USAGE%)"
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
echo "‚öôÔ∏è  –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø:"
for container in $(docker ps --format "{{.Names}}"); do
    log_config=$(docker inspect "$container" | grep -A 5 "LogConfig" | grep -E "(Type|max-size|max-file)" | tr -d ' ",')
    echo "  üì¶ $container:"
    echo "    $log_config" | sed 's/^/    /'
done
echo ""

echo "üìä –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
echo "  - –õ–æ–≥–∏ –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å max-size –∏ max-file"
echo "  - –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ: docker system prune -f"
echo "  - –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Ä–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤: du -sh /var/lib/docker/containers/*/"
echo ""

