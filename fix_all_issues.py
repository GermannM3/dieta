#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
"""

import os
import sys
import requests
import json
from datetime import datetime

def check_api_url():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç API URL –≤ —Ñ–∞–π–ª–∞—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API URL...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º user_handlers.py
    with open('components/handlers/user_handlers.py', 'r', encoding='utf-8') as f:
        content = f.read()
        if 'http://5.129.198.80:8000' in content:
            print("‚úÖ API URL –≤ user_handlers.py –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        else:
            print("‚ùå API URL –≤ user_handlers.py –ù–ï –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
            return False
    
    return True

def check_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ endpoint'–æ–≤ –≤ API"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º improved_api_server.py
    with open('improved_api_server.py', 'r', encoding='utf-8') as f:
        content = f.read()
        if '@app.post("/api/add_preset_meals")' in content:
            print("‚úÖ Endpoint /api/add_preset_meals –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå Endpoint /api/add_preset_meals –ù–ï –Ω–∞–π–¥–µ–Ω")
            return False
    
    return True

def check_payment_system():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º payment_handlers.py
    with open('components/payment_system/payment_handlers.py', 'r', encoding='utf-8') as f:
        content = f.read()
        if 'diet_consultant_handler' in content and 'menu_generator_handler' in content:
            print("‚úÖ –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("‚ùå –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ù–ï –Ω–∞–π–¥–µ–Ω—ã")
            return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º main.py
    with open('main.py', 'r', encoding='utf-8') as f:
        content = f.read()
        if 'payment_router' in content:
            print("‚úÖ Payment router –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ main.py")
        else:
            print("‚ùå Payment router –ù–ï –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ main.py")
            return False
    
    return True

def test_api_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint
        response = requests.get('http://5.129.198.80:8000/health', timeout=10)
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É http://5.129.198.80:8000")
            return True
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ë–î
        response = requests.get('http://5.129.198.80:8000/api/profile?tg_id=389694638', timeout=10)
        if response.status_code == 200:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
            return True
        elif response.status_code == 404:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ (–ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
            return True
        else:
            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def check_subscription_table():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ–¥–ø–∏—Å–æ–∫"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–¥–ø–∏—Å–æ–∫...")
    
    try:
        import psycopg2
        from dotenv import load_dotenv
        
        load_dotenv()
        
        database_url = os.getenv('DATABASE_URL')
        if database_url.startswith('postgresql+asyncpg://'):
            database_url = database_url.replace('postgresql+asyncpg://', 'postgresql://', 1)
        
        conn = psycopg2.connect(database_url)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'subscriptions'
            );
        """)
        
        if cursor.fetchone()[0]:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ subscriptions —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            cursor.execute("""
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name = 'subscriptions'
                ORDER BY ordinal_position;
            """)
            
            columns = cursor.fetchall()
            print(f"üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã subscriptions:")
            for col in columns:
                print(f"  - {col[0]}: {col[1]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            cursor.execute("SELECT COUNT(*) FROM subscriptions;")
            count = cursor.fetchone()[0]
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {count}")
            
        else:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ subscriptions –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return False
        
        cursor.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–¥–ø–∏—Å–æ–∫: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã...")
    print("=" * 50)
    
    checks = [
        ("API URL", check_api_url),
        ("API Endpoints", check_api_endpoints),
        ("–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", check_payment_system),
        ("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API", test_api_connection),
        ("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", check_database_connection),
        ("–¢–∞–±–ª–∏—Ü–∞ –ø–æ–¥–ø–∏—Å–æ–∫", check_subscription_table)
    ]
    
    results = []
    for name, check_func in checks:
        try:
            result = check_func()
            results.append((name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {name}: {e}")
            results.append((name, False))
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 50)
    
    all_passed = True
    for name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù–ê" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù–ê"
        print(f"{name}: {status}")
        if not result:
            all_passed = False
    
    print("\n" + "=" * 50)
    if all_passed:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–í–ê–õ–ï–ù–´. –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.")
        print("\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
        print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: docker-compose down && docker-compose up -d")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs bot")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API: curl http://5.129.198.80:8000/health")

if __name__ == "__main__":
    main() 