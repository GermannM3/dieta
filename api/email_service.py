import smtplib
from email.mime.text import MimeText
from email.mime.multipart import MimeMultipart
import os
from dotenv import load_dotenv
import logging
import random
import string
from typing import Optional

load_dotenv()

logger = logging.getLogger(__name__)

class EmailService:
    def __init__(self):
        # SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.smtp_server = os.getenv('SMTP_SERVER', 'smtp.gmail.com')
        self.smtp_port = int(os.getenv('SMTP_PORT', '587'))
        self.smtp_username = os.getenv('SMTP_USERNAME', '')
        self.smtp_password = os.getenv('SMTP_PASSWORD', '')
        self.from_email = os.getenv('FROM_EMAIL', self.smtp_username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.is_configured = bool(self.smtp_username and self.smtp_password)
        
        if not self.is_configured:
            logger.warning("SMTP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–∏—Å—å–º–∞ –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.")
    
    def send_email(self, to_email: str, subject: str, body: str, is_html: bool = False) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ email"""
        if not self.is_configured:
            logger.warning(f"SMTP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–∏—Å—å–º–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {to_email}")
            return False
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg = MimeMultipart()
            msg['From'] = self.from_email
            msg['To'] = to_email
            msg['Subject'] = subject
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            msg.attach(MimeText(body, 'html' if is_html else 'plain', 'utf-8'))
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ –ø–æ—Ä—Ç—É
            if self.smtp_port == 465:
                # SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Rambler, Gmail SSL)
                with smtplib.SMTP_SSL(self.smtp_server, self.smtp_port) as server:
                    server.login(self.smtp_username, self.smtp_password)
                    server.send_message(msg)
            else:
                # STARTTLS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ—Ä—Ç—ã 587, 25)
                with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
                    if self.smtp_port != 25:  # –î–ª—è –ø–æ—Ä—Ç–∞ 25 STARTTLS –º–æ–∂–µ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è
                        server.starttls()
                    server.login(self.smtp_username, self.smtp_password)
                    server.send_message(msg)
            
            logger.info(f"Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ: {to_email}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email {to_email}: {e}")
            return False
    
    def send_confirmation_email(self, to_email: str, confirmation_code: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        subject = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - –¢–≤–æ–π –î–∏–µ—Ç–æ–ª–æ–≥"
        body = f"""
        <html>
        <body style="font-family: Arial, sans-serif; color: #333;">
            <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;">
                <h2 style="color: #4CAF50;">ü•ó –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–≤–æ–π –î–∏–µ—Ç–æ–ª–æ–≥!</h2>
                <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è.</p>
                
                <div style="background-color: #f9f9f9; padding: 20px; border-radius: 5px; text-align: center; margin: 20px 0;">
                    <p style="margin: 0; font-size: 18px;">–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</p>
                    <h1 style="color: #4CAF50; font-size: 32px; margin: 10px 0; letter-spacing: 3px;">{confirmation_code}</h1>
                </div>
                
                <p>–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.</p>
                <p style="color: #666; font-size: 14px;">–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.</p>
                
                <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
                
                <p style="color: #999; font-size: 12px;">
                    –ï—Å–ª–∏ –≤—ã –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.<br>
                    –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ –¢–≤–æ–π –î–∏–µ—Ç–æ–ª–æ–≥
                </p>
            </div>
        </body>
        </html>
        """
        return self.send_email(to_email, subject, body, is_html=True)
    
    def send_password_reset_email(self, to_email: str, reset_code: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è"""
        subject = "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - –¢–≤–æ–π –î–∏–µ—Ç–æ–ª–æ–≥"
        body = f"""
        <html>
        <body style="font-family: Arial, sans-serif; color: #333;">
            <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;">
                <h2 style="color: #FF9800;">üîë –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h2>
                <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ <strong>{to_email}</strong></p>
                
                <div style="background-color: #fff3e0; padding: 20px; border-radius: 5px; text-align: center; margin: 20px 0;">
                    <p style="margin: 0; font-size: 18px;">–í–∞—à –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</p>
                    <h1 style="color: #FF9800; font-size: 32px; margin: 10px 0; letter-spacing: 3px;">{reset_code}</h1>
                </div>
                
                <p>–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è.</p>
                <p style="color: #d32f2f; font-weight: bold;">‚ö†Ô∏è –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç!</p>
                
                <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
                
                <p style="color: #999; font-size: 12px;">
                    –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.<br>
                    –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ –¢–≤–æ–π –î–∏–µ—Ç–æ–ª–æ–≥
                </p>
            </div>
        </body>
        </html>
        """
        return self.send_email(to_email, subject, body, is_html=True)
    
    @staticmethod
    def generate_confirmation_code() -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è 6-–∑–Ω–∞—á–Ω–æ–≥–æ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
        return ''.join(random.choices(string.digits, k=6))
    
    @staticmethod
    def get_smtp_config_examples() -> dict:
        """–ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π SMTP –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤"""
        return {
            "Gmail": {
                "SMTP_SERVER": "smtp.gmail.com",
                "SMTP_PORT": "587",
                "SMTP_USERNAME": "your_email@gmail.com",
                "SMTP_PASSWORD": "your_app_password",  # –ù—É–∂–µ–Ω App Password!
                "FROM_EMAIL": "your_email@gmail.com"
            },
            "Gmail_SSL": {
                "SMTP_SERVER": "smtp.gmail.com",
                "SMTP_PORT": "465",
                "SMTP_USERNAME": "your_email@gmail.com",
                "SMTP_PASSWORD": "your_app_password",
                "FROM_EMAIL": "your_email@gmail.com"
            },
            "Yandex": {
                "SMTP_SERVER": "smtp.yandex.ru",
                "SMTP_PORT": "587",
                "SMTP_USERNAME": "your_email@yandex.ru",
                "SMTP_PASSWORD": "your_password",
                "FROM_EMAIL": "your_email@yandex.ru"
            },
            "Mail.ru": {
                "SMTP_SERVER": "smtp.mail.ru",
                "SMTP_PORT": "587",
                "SMTP_USERNAME": "your_email@mail.ru",
                "SMTP_PASSWORD": "your_password",
                "FROM_EMAIL": "your_email@mail.ru"
            },
            "Rambler": {
                "SMTP_SERVER": "smtp.rambler.ru",
                "SMTP_PORT": "465",  # SSL
                "SMTP_USERNAME": "your_email@rambler.ru",
                "SMTP_PASSWORD": "your_password",
                "FROM_EMAIL": "your_email@rambler.ru"
            },
            "Rambler_STARTTLS": {
                "SMTP_SERVER": "smtp.rambler.ru",
                "SMTP_PORT": "587",  # STARTTLS –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞
                "SMTP_USERNAME": "your_email@rambler.ru",
                "SMTP_PASSWORD": "your_password",
                "FROM_EMAIL": "your_email@rambler.ru"
            },
            "Outlook": {
                "SMTP_SERVER": "smtp-mail.outlook.com",
                "SMTP_PORT": "587",
                "SMTP_USERNAME": "your_email@outlook.com",
                "SMTP_PASSWORD": "your_password",
                "FROM_EMAIL": "your_email@outlook.com"
            }
        }

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
email_service = EmailService() 