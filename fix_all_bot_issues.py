#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º —Å –±–æ—Ç–æ–º
"""

import os
import sys
import subprocess
import asyncio
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def check_api_server():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç API —Å–µ—Ä–≤–µ—Ä"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        response = requests.get('http://5.129.198.80:8000/api/health', timeout=10)
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def fix_api_url():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç API_URL –≤ .env —Ñ–∞–π–ª–µ"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API_URL...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π API_URL
    current_url = os.getenv('API_BASE_URL', '')
    if current_url == 'http://localhost:8000':
        print("‚úÖ API_URL —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        return True
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º API_URL
    try:
        with open('server.env', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω—è–µ–º API_URL
        content = content.replace(
            'API_BASE_URL=http://tvoi-kalkulyator.ru/api',
            'API_BASE_URL=http://localhost:8000'
        )
        
        with open('server.env', 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("‚úÖ API_URL –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ http://localhost:8000")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API_URL: {e}")
        return False

def check_database_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ë–î
        response = requests.get('http://5.129.198.80:8000/api/profile?tg_id=389694638', timeout=10)
        if response.status_code == 200:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
            return True
        elif response.status_code == 404:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ (–ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
            return True
        else:
            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def test_bot_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞...")
    
    test_results = []
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
    try:
        response = requests.get('http://5.129.198.80:8000/api/profile?tg_id=389694638', timeout=10)
        if response.status_code == 200:
            test_results.append("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            test_results.append("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        test_results.append(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏
    try:
        response = requests.get('http://5.129.198.80:8000/api/meals?user_id=389694638', timeout=10)
        if response.status_code == 200:
            test_results.append("‚úÖ –ü—Ä–∏–µ–º—ã –ø–∏—â–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        else:
            test_results.append("‚ùå –ü—Ä–∏–µ–º—ã –ø–∏—â–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
    except Exception as e:
        test_results.append(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    try:
        response = requests.get('http://5.129.198.80:8000/api/stats?user_id=389694638', timeout=10)
        if response.status_code == 200:
            test_results.append("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            test_results.append("‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        test_results.append(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for result in test_results:
        print(result)
    
    return all("‚úÖ" in result for result in test_results)

def create_fix_instructions():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é"""
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
    print("=" * 50)
    
    print("\n1Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É:")
    print("   ssh root@5.129.198.80")
    print("   cd /opt/dieta")
    print("   source venv/bin/activate")
    
    print("\n2Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞:")
    print("   git pull origin main")
    
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API_URL –≤ .env:")
    print("   nano .env")
    print("   # –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ API_BASE_URL=http://localhost:8000")
    
    print("\n4Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞:")
    print("   sudo systemctl stop bot")
    print("   sudo pkill -f 'python.*main'")
    print("   sudo systemctl start bot")
    
    print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤:")
    print("   sudo journalctl -u bot -f")
    
    print("\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Telegram:")
    print("   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
    print("   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ /profile")
    print("   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å –µ–¥—É'")
    print("   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ '–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏'")
    
    print("\n" + "=" * 50)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –±–æ—Ç–æ–º")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–µ—Ä–≤–µ—Ä
    api_ok = check_api_server()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º API_URL
    url_ok = fix_api_url()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_ok = check_database_connection()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    functions_ok = test_bot_functions()
    
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 50)
    print(f"API —Å–µ—Ä–≤–µ—Ä: {'‚úÖ' if api_ok else '‚ùå'}")
    print(f"API_URL: {'‚úÖ' if url_ok else '‚ùå'}")
    print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {'‚úÖ' if db_ok else '‚ùå'}")
    print(f"–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞: {'‚úÖ' if functions_ok else '‚ùå'}")
    
    if all([api_ok, url_ok, db_ok, functions_ok]):
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∏–∂–µ:")
        create_fix_instructions()

if __name__ == "__main__":
    main() 