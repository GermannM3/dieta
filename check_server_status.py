#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ 5.129.198.80
"""

import subprocess
import requests
import sys
import os

def run_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def check_docker_containers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...")
    
    success, output, error = run_command("docker-compose ps")
    if success:
        print("üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:")
        print(output)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
        if "Up" in output and "Exit" not in output:
            print("‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã")
            return True
        else:
            print("‚ö†Ô∏è  –ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: {error}")
        return False

def check_api_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ API"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API (5.129.198.80:8000)...")
    
    try:
        response = requests.get("http://5.129.198.80:8000/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print(f"‚ö†Ô∏è  API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return False

def check_frontend_domains():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –ø–æ –¥–æ–º–µ–Ω–∞–º"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –ø–æ –¥–æ–º–µ–Ω–∞–º...")
    
    domains = [
        "https://—Ç–≤–æ–π-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.—Ä—Ñ",
        "https://tvoi-kalkulyator.ru"
    ]
    
    all_working = True
    for domain in domains:
        try:
            response = requests.get(domain, timeout=10, verify=False)
            if response.status_code == 200:
                print(f"‚úÖ {domain} - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print(f"‚ö†Ô∏è  {domain} - —Å—Ç–∞—Ç—É—Å {response.status_code}")
                all_working = False
        except requests.exceptions.RequestException as e:
            print(f"‚ùå {domain} - –æ—à–∏–±–∫–∞: {e}")
            all_working = False
    
    return all_working

def check_frontend_port():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ –ø–æ—Ä—Ç—É 3000"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (5.129.198.80:3000)...")
    
    try:
        response = requests.get("http://5.129.198.80:3000", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Frontend –Ω–∞ –ø–æ—Ä—Ç—É 3000 —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ö†Ô∏è  Frontend –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ frontend: {e}")
        return False

def check_bot_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ –±–æ—Ç–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –±–æ—Ç–∞...")
    
    success, output, error = run_command("docker-compose logs --tail=20 bot")
    if success:
        print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞:")
        print(output)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
        if "ERROR" in output or "Exception" in output:
            print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –±–æ—Ç–∞")
            return False
        else:
            print("‚úÖ –õ–æ–≥–∏ –±–æ—Ç–∞ –±–µ–∑ –æ—à–∏–±–æ–∫")
            return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {error}")
        return False

def check_api_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ API"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ API...")
    
    success, output, error = run_command("docker-compose logs --tail=20 api")
    if success:
        print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ API:")
        print(output)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
        if "ERROR" in output or "Exception" in output:
            print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö API")
            return False
        else:
            print("‚úÖ –õ–æ–≥–∏ API –±–µ–∑ –æ—à–∏–±–æ–∫")
            return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {error}")
        return False

def rebuild_containers():
    """–ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"""
    print("\nüî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...")
    
    commands = [
        "docker-compose down",
        "docker-compose build --no-cache",
        "docker-compose up -d"
    ]
    
    for cmd in commands:
        print(f"–í—ã–ø–æ–ª–Ω—è—é: {cmd}")
        success, output, error = run_command(cmd)
        if success:
            print(f"‚úÖ {cmd} - –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        else:
            print(f"‚ùå {cmd} - –æ—à–∏–±–∫–∞: {error}")
            return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ 5.129.198.80")
    print("=" * 60)
    
    checks = [
        ("Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã", check_docker_containers),
        ("API –∑–¥–æ—Ä–æ–≤—å–µ", check_api_health),
        ("Frontend –¥–æ–º–µ–Ω—ã", check_frontend_domains),
        ("Frontend –ø–æ—Ä—Ç 3000", check_frontend_port),
        ("–õ–æ–≥–∏ –±–æ—Ç–∞", check_bot_logs),
        ("–õ–æ–≥–∏ API", check_api_logs)
    ]
    
    results = []
    for name, check_func in checks:
        try:
            result = check_func()
            results.append((name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {name}: {e}")
            results.append((name, False))
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 60)
    
    all_passed = True
    for name, result in results:
        status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if result else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        print(f"{name}: {status}")
        if not result:
            all_passed = False
    
    print("\n" + "=" * 60)
    if all_passed:
        print("üéâ –í–°–ï –°–ï–†–í–ò–°–´ –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:")
        print("üåê API: http://5.129.198.80:8000")
        print("üì± Frontend: https://—Ç–≤–æ–π-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.—Ä—Ñ")
        print("üì± Frontend: https://tvoi-kalkulyator.ru")
        print("ü§ñ –ë–æ—Ç: —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ")
    else:
        print("‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –°–ï–†–í–ò–°–´ –ù–ï –†–ê–ë–û–¢–ê–Æ–¢")
        print("\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: python check_server_status.py --rebuild")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—Ç—ã: netstat -tlnp | grep :80")
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —Ñ–ª–∞–≥ --rebuild, –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    if "--rebuild" in sys.argv:
        print("\nüî® –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...")
        if rebuild_containers():
            print("‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            print("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: python check_server_status.py")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ")

if __name__ == "__main__":
    main() 