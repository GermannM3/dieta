#!/bin/bash
echo "üöÄ –î–µ–ø–ª–æ–π –î–∏–µ—Ç–æ–ª–æ–≥-–±–æ—Ç–∞ –Ω–∞ Timeweb Cloud"
echo "========================================="

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–∞–ø–∫—É
echo "üìÇ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É /opt/dieta..."
cd /opt/dieta || { echo "‚ùå –ü–∞–ø–∫–∞ /opt/dieta –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"; exit 1; }

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
echo "üìç –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: $(pwd)"
echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏:"
ls -la

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–µ–∫—Ç
if [[ ! -f "main.py" ]]; then
    echo "‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ /opt/dieta!"
    echo "‚¨áÔ∏è –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç..."
    
    # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É (–∫—Ä–æ–º–µ .env –µ—Å–ª–∏ –µ—Å—Ç—å)
    if [[ -f ".env" ]]; then
        cp .env .env.backup
    fi
    
    rm -rf * .*
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
    git clone https://github.com/GermannM3/dieta.git .
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .env
    if [[ -f ".env.backup" ]]; then
        cp .env.backup .env
        rm .env.backup
    fi
fi

# –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
git pull origin main

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
if [[ ! -f ".env" ]]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
    cat > .env << 'EOF'
# Telegram Bot
TG_TOKEN=your_telegram_bot_token_here

# Database (Neon PostgreSQL)
DATABASE_URL=postgresql://username:password@host:port/database

# AI Services
MISTRAL_API_KEY=your_mistral_key_here
GIGACHAT_CLIENT_SECRET=your_gigachat_secret_here
GIGACHAT_CLIENT_ID=your_gigachat_id_here

# API Configuration
API_BASE_URL=http://5.129.198.80:8000
FRONTEND_URL=http://5.129.198.80:3000

# CalorieNinjas API
CALORIE_NINJAS_API_KEY=your_calorie_ninjas_key_here
EOF
    echo "‚ö†Ô∏è –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏!"
    echo "nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &> /dev/null; then
    echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    systemctl start docker
    systemctl enable docker
fi

if ! command -v docker-compose &> /dev/null; then
    echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down --remove-orphans 2>/dev/null || true

# –û—á–∏—â–∞–µ–º Docker
echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker..."
docker system prune -f

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
echo "üîß –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
docker-compose logs --tail=20

echo ""
echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üåê –°–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "- API: http://5.129.198.80:8000"
echo "- API Docs: http://5.129.198.80:8000/docs"
echo "- Frontend: http://5.129.198.80:3000"
echo ""
echo "üìù –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "üîÑ –î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: docker-compose restart" 