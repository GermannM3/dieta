#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞ –∏ API
"""

import subprocess
import sys
import time
import os

def kill_process_on_port(port):
    """–£–±–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –∑–∞–Ω–∏–º–∞—é—â–∏–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É
        result = subprocess.run(
            f'netstat -ano | findstr :{port}',
            shell=True,
            capture_output=True,
            text=True
        )
        
        if result.stdout:
            lines = result.stdout.strip().split('\n')
            for line in lines:
                if 'LISTENING' in line:
                    parts = line.split()
                    if len(parts) >= 5:
                        pid = parts[-1]
                        try:
                            subprocess.run(f'taskkill /F /PID {pid}', shell=True, check=True)
                            print(f"‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å PID {pid} –Ω–∞ –ø–æ—Ä—Ç—É {port}")
                        except subprocess.CalledProcessError:
                            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å PID {pid}")
        else:
            print(f"‚úÖ –ü–æ—Ä—Ç {port} —Å–≤–æ–±–æ–¥–µ–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –ø–æ—Ä—Ç–∞ {port}: {e}")

def kill_python_processes_by_script():
    """–£–±–∏—Ç—å Python –ø—Ä–æ—Ü–µ—Å—Å—ã —á–µ—Ä–µ–∑ taskkill"""
    try:
        # –£–±–∏–≤–∞–µ–º –≤—Å–µ python –ø—Ä–æ—Ü–µ—Å—Å—ã
        result = subprocess.run('taskkill /F /IM python.exe', shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã Python –ø—Ä–æ—Ü–µ—Å—Å—ã")
            return 1
        else:
            print("‚úÖ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
            return 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {e}")
        return 0

def main():
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...")
    print("=" * 50)
    
    # 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ —Å–∫—Ä–∏–ø—Ç–∞–º
    print("üìã –ü–æ–∏—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    killed_count = kill_python_processes_by_script()
    
    # 2. –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
    print("\nüîå –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤...")
    kill_process_on_port(8000)  # API —Å–µ—Ä–≤–µ—Ä
    kill_process_on_port(5173)  # Frontend (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)
    
    # 3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    print("\nüßπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...")
    try:
        # –£–±–∏–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è python –ø—Ä–æ—Ü–µ—Å—Å—ã (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
        result = subprocess.run('taskkill /F /IM python.exe', shell=True, capture_output=True)
        if result.returncode == 0:
            print("‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è Python –ø—Ä–æ—Ü–µ—Å—Å—ã")
        else:
            print("‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö Python –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    except:
        pass
    
    # 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    time.sleep(2)
    print("\nüîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 8000
    result = subprocess.run('netstat -ano | findstr :8000', shell=True, capture_output=True)
    if result.stdout:
        print("‚ö†Ô∏è  –ü–æ—Ä—Ç 8000 –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç")
    else:
        print("‚úÖ –ü–æ—Ä—Ç 8000 —Å–≤–æ–±–æ–¥–µ–Ω")
    
    print("\n" + "=" * 50)
    print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å start_all_services.py")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚ùå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1) 