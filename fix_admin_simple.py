#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import asyncio
import bcrypt
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from database.init_database import engine, WebUser, async_session

def hash_password(password: str) -> str:
    """–•–µ—à–∏—Ä—É–µ—Ç –ø–∞—Ä–æ–ª—å –∏—Å–ø–æ–ª—å–∑—É—è bcrypt"""
    salt = bcrypt.gensalt()
    hashed = bcrypt.hashpw(password.encode('utf-8'), salt)
    return hashed.decode('utf-8')

async def fix_admin():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞...")
    
    async with async_session() as session:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–¥–º–∏–Ω
            admin_email = "admin@dieta.ru"
            
            # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
            result = await session.execute(
                "SELECT id, email FROM web_users WHERE email = :email",
                {"email": admin_email}
            )
            existing_admin = result.fetchone()
            
            if existing_admin:
                print(f"‚ùå –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {existing_admin[1]}")
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–≥–æ –∞–¥–º–∏–Ω–∞
                await session.execute(
                    "DELETE FROM web_users WHERE email = :email",
                    {"email": admin_email}
                )
                await session.commit()
                print("üóëÔ∏è –°—Ç–∞—Ä—ã–π –∞–¥–º–∏–Ω —É–¥–∞–ª–µ–Ω")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
            hashed_password = hash_password("admin123")
            
            await session.execute(
                """
                INSERT INTO web_users (email, password_hash, name, is_confirmed, created_at, updated_at)
                VALUES (:email, :password_hash, :name, :is_confirmed, NOW(), NOW())
                """,
                {
                    "email": admin_email,
                    "password_hash": hashed_password,
                    "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                    "is_confirmed": True
                }
            )
            
            await session.commit()
            
            print(f"‚úÖ –ù–æ–≤—ã–π –∞–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: {admin_email}")
            print("üîë –õ–æ–≥–∏–Ω: admin@dieta.ru")
            print("üîë –ü–∞—Ä–æ–ª—å: admin123")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            await session.rollback()
            raise

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        await fix_admin()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main()) 