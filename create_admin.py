#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
"""

import asyncio
import sys
import os
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.init_database import async_session, WebUser, WebProfile
from api.auth_api import register_user, UserRegister

load_dotenv()

async def create_admin():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 50)
    
    admin_email = "germannm@vk.com"
    admin_password = "Germ@nnM3"
    admin_name = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    
    try:
        async with async_session() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            result = await session.execute(
                f"SELECT id FROM web_users WHERE email = '{admin_email}'"
            )
            existing_user = result.fetchone()
            
            if existing_user:
                print(f"‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å email {admin_email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                profile_result = await session.execute(
                    f"SELECT id FROM web_profiles WHERE user_id = {existing_user[0]}"
                )
                existing_profile = profile_result.fetchone()
                
                if existing_profile:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
                    await session.execute(
                        f"UPDATE web_profiles SET is_premium = true WHERE user_id = {existing_user[0]}"
                    )
                    print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω (is_premium = true)")
                else:
                    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
                    await session.execute(
                        f"INSERT INTO web_profiles (user_id, name, is_premium) VALUES ({existing_user[0]}, '{admin_name}', true)"
                    )
                    print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞–Ω")
                
                await session.commit()
                return
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            print(f"üìù –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {admin_email}")
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            user_data = UserRegister(
                email=admin_email,
                password=admin_password,
                name=admin_name
            )
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            auth_response = await register_user(user_data)
            
            if auth_response:
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: {auth_response.user.id}")
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                profile = WebProfile(
                    user_id=auth_response.user.id,
                    name=admin_name,
                    is_premium=True
                )
                session.add(profile)
                await session.commit()
                
                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞–Ω")
                print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                print(f"  Email: {admin_email}")
                print(f"  –ü–∞—Ä–æ–ª—å: {admin_password}")
                print(f"  –ü—Ä–µ–º–∏—É–º: –∞–∫—Ç–∏–≤–µ–Ω")
                print(f"  –°–æ–æ–±—â–µ–Ω–∏–µ: {auth_response.message}")
                
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()

async def test_admin_login():
    """–¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("\nüß™ –¢–µ—Å—Ç –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("=" * 50)
    
    try:
        from api.auth_api import login_user, UserLogin
        
        admin_email = "germannm@vk.com"
        admin_password = "Germ@nnM3"
        
        login_data = UserLogin(email=admin_email, password=admin_password)
        auth_response = await login_user(login_data)
        
        if auth_response:
            print("‚úÖ –í—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–µ–Ω")
            print(f"  ID: {auth_response.user.id}")
            print(f"  Email: {auth_response.user.email}")
            print(f"  –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {auth_response.user.is_confirmed}")
            print(f"  –¢–æ–∫–µ–Ω: {auth_response.token[:20]}...")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞: {e}")

if __name__ == "__main__":
    async def main():
        if len(sys.argv) > 1:
            command = sys.argv[1]
            
            if command == "create":
                await create_admin()
            elif command == "test":
                await test_admin_login()
            else:
                print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
                print("  python create_admin.py create - —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
                print("  python create_admin.py test   - –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥")
        else:
            await create_admin()
            await test_admin_login()
    
    asyncio.run(main()) 